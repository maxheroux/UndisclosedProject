#ifndef UNDISCLOSED_PROJECT_BASICCLASS_H
#define UNDISCLOSED_PROJECT_BASICCLASS_H

namespace undisclosed_project
{
	////////////////////////////////////////////////////////////
	//
	// @class undisclosed_project::myClass
	//
	// @brief Example of a basic class
	//
	// @author maxheroux
	//
	// @date 2016-04-12
	//
	////////////////////////////////////////////////////////////
	class myClass
	{

	public:

		////////////////////////////////////////////////////////////
		//
		// @brief Default constructor
		//
		// @author maxheroux
		//
		// @date 2016-04-12
		//
		////////////////////////////////////////////////////////////
		explicit myClass();

		////////////////////////////////////////////////////////////
		//
		// @brief Default destructor
		//
		// @author maxheroux
		//
		// @date 2016-04-12
		//
		////////////////////////////////////////////////////////////
		virtual ~myClass();

		////////////////////////////////////////////////////////////
		//
		// @brief Printing my integer pointer
		//
		// @author maxheroux
		//
		// @date 2016-04-12
		//
		////////////////////////////////////////////////////////////
		void printMyInt();

	private:

		////////////////////////////////////////////////////////////
		//
		// @brief Copy constructor
		//
		// @author maxheroux
		//
		// @date 2016-04-12
		//
		////////////////////////////////////////////////////////////
		myClass(const myClass& mClass);

		////////////////////////////////////////////////////////////
		//
		// @brief Copy assignment
		//
		// @author maxheroux
		//
		// @date 2016-04-12
		//
		////////////////////////////////////////////////////////////
		myClass& operator=(const myClass& myClass);

	private:

		int* mPtr;					///< Integer pointer for dummies
	};
}

#endif